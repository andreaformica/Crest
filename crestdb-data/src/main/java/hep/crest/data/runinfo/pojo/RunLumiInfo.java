package hep.crest.data.runinfo.pojo;
// Generated Aug 2, 2016 3:50:25 PM by Hibernate Tools 3.2.2.GA

import hep.crest.data.config.DatabasePropertyConfigurator;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.Accessors;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import java.math.BigInteger;
import java.sql.Timestamp;
import java.time.Instant;
import java.util.Date;

/**
 * GlobalTag generated by hbm2java.
 */
@Entity
@Table(name = "RUN_LUMI_INFO", schema = DatabasePropertyConfigurator.SCHEMA_NAME)
@Accessors(fluent = true)
@Getter
@Setter
@NoArgsConstructor
@ToString
@EqualsAndHashCode
public class RunLumiInfo implements java.io.Serializable {
    /**
     * The since time.
     */
    @Id
    @Column(name = "SINCE", nullable = false, precision = 38, scale = 0)
    private BigInteger since;
    /**
     * The start time of this run.
     */
    @Column(name = "START_TIME", nullable = false, precision = 38, scale = 0)
    private BigInteger starttime;
    /**
     * The end time of this run.
     */
    @Column(name = "END_TIME", nullable = false, precision = 38, scale = 0)
    private BigInteger endtime;
    /**
     * The run number.
     */
    @Column(name = "RUN", nullable = false, precision = 38, scale = 0)
    private BigInteger runNumber;
    /**
     * The lumi block.
     */
    @Column(name = "LUMI_BLOCK", nullable = false, precision = 38, scale = 0)
    private BigInteger lb;
    /**
     * The insertion time.
     */
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "INSERTION_TIME", nullable = false, updatable = true, length = 11)
    @EqualsAndHashCode.Exclude
    private Date insertionTime;


    /**
     * Before saving.
     * 
     * @return
     */
    @PrePersist
    public void prePersist() {
        if (this.insertionTime() == null) {
            final Timestamp now = Timestamp.from(Instant.now());
            this.insertionTime(now);
        }
    }
}
