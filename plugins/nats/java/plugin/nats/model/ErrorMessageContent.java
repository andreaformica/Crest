/*
 * Svom Message Model
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * Contact: andrea.formica@cern.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package plugin.nats.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * ErrorMessageContent
 */
@JsonPropertyOrder({
  ErrorMessageContent.JSON_PROPERTY_SERVICE_DESCRIPTOR,
  ErrorMessageContent.JSON_PROPERTY_PROCESSING_DESCRIPTOR,
  ErrorMessageContent.JSON_PROPERTY_HTTP_ERROR_CODE,
  ErrorMessageContent.JSON_PROPERTY_LEVEL,
  ErrorMessageContent.JSON_PROPERTY_INFO,
  ErrorMessageContent.JSON_PROPERTY_DATE,
  ErrorMessageContent.JSON_PROPERTY_MESSAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen")
public class ErrorMessageContent   {
  public static final String JSON_PROPERTY_SERVICE_DESCRIPTOR = "service_descriptor";
  @JsonProperty(JSON_PROPERTY_SERVICE_DESCRIPTOR)
  private ServiceDescriptor serviceDescriptor;

  public static final String JSON_PROPERTY_PROCESSING_DESCRIPTOR = "processing_descriptor";
  @JsonProperty(JSON_PROPERTY_PROCESSING_DESCRIPTOR)
  private ProcessingDescriptor processingDescriptor;

  public static final String JSON_PROPERTY_HTTP_ERROR_CODE = "http_error_code";
  @JsonProperty(JSON_PROPERTY_HTTP_ERROR_CODE)
  private Integer httpErrorCode;

  public static final String JSON_PROPERTY_LEVEL = "level";
  @JsonProperty(JSON_PROPERTY_LEVEL)
  private ErrorLevel level;

  public static final String JSON_PROPERTY_INFO = "info";
  @JsonProperty(JSON_PROPERTY_INFO)
  private String info;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonProperty(JSON_PROPERTY_DATE)
  private OffsetDateTime date;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  private String message;

  public ErrorMessageContent serviceDescriptor(ServiceDescriptor serviceDescriptor) {
    this.serviceDescriptor = serviceDescriptor;
    return this;
  }

  /**
   * Get serviceDescriptor
   * @return serviceDescriptor
   **/
  @JsonProperty("service_descriptor")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public ServiceDescriptor getServiceDescriptor() {
    return serviceDescriptor;
  }

  public void setServiceDescriptor(ServiceDescriptor serviceDescriptor) {
    this.serviceDescriptor = serviceDescriptor;
  }

  public ErrorMessageContent processingDescriptor(ProcessingDescriptor processingDescriptor) {
    this.processingDescriptor = processingDescriptor;
    return this;
  }

  /**
   * Get processingDescriptor
   * @return processingDescriptor
   **/
  @JsonProperty("processing_descriptor")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public ProcessingDescriptor getProcessingDescriptor() {
    return processingDescriptor;
  }

  public void setProcessingDescriptor(ProcessingDescriptor processingDescriptor) {
    this.processingDescriptor = processingDescriptor;
  }

  public ErrorMessageContent httpErrorCode(Integer httpErrorCode) {
    this.httpErrorCode = httpErrorCode;
    return this;
  }

  /**
   * Get httpErrorCode
   * @return httpErrorCode
   **/
  @JsonProperty("http_error_code")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public Integer getHttpErrorCode() {
    return httpErrorCode;
  }

  public void setHttpErrorCode(Integer httpErrorCode) {
    this.httpErrorCode = httpErrorCode;
  }

  public ErrorMessageContent level(ErrorLevel level) {
    this.level = level;
    return this;
  }

  /**
   * Get level
   * @return level
   **/
  @JsonProperty("level")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public ErrorLevel getLevel() {
    return level;
  }

  public void setLevel(ErrorLevel level) {
    this.level = level;
  }

  public ErrorMessageContent info(String info) {
    this.info = info;
    return this;
  }

  /**
   * Get info
   * @return info
   **/
  @JsonProperty("info")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getInfo() {
    return info;
  }

  public void setInfo(String info) {
    this.info = info;
  }

  public ErrorMessageContent date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

  /**
   * Generic type for the Dates. Using Date as classname make the generator including java import in the Py code
   * @return date
   **/
  @JsonProperty("date")
  @ApiModelProperty(required = true, value = "Generic type for the Dates. Using Date as classname make the generator including java import in the Py code")
  @NotNull 
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public ErrorMessageContent message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   **/
  @JsonProperty("message")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErrorMessageContent errorMessageContent = (ErrorMessageContent) o;
    return Objects.equals(this.serviceDescriptor, errorMessageContent.serviceDescriptor) &&
        Objects.equals(this.processingDescriptor, errorMessageContent.processingDescriptor) &&
        Objects.equals(this.httpErrorCode, errorMessageContent.httpErrorCode) &&
        Objects.equals(this.level, errorMessageContent.level) &&
        Objects.equals(this.info, errorMessageContent.info) &&
        Objects.equals(this.date, errorMessageContent.date) &&
        Objects.equals(this.message, errorMessageContent.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceDescriptor, processingDescriptor, httpErrorCode, level, info, date, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErrorMessageContent {\n");
    
    sb.append("    serviceDescriptor: ").append(toIndentedString(serviceDescriptor)).append("\n");
    sb.append("    processingDescriptor: ").append(toIndentedString(processingDescriptor)).append("\n");
    sb.append("    httpErrorCode: ").append(toIndentedString(httpErrorCode)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

