/*
 * Svom Message Model
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * Contact: andrea.formica@cern.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package plugin.nats.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Descriptor of a service running in a Docker
 */
@ApiModel(description = "Descriptor of a service running in a Docker")
@JsonPropertyOrder({
  ServiceDescriptor.JSON_PROPERTY_NAME,
  ServiceDescriptor.JSON_PROPERTY_URI,
  ServiceDescriptor.JSON_PROPERTY_INSTRUMENT,
  ServiceDescriptor.JSON_PROPERTY_PROGRAM,
  ServiceDescriptor.JSON_PROPERTY_CREATION_DATE,
  ServiceDescriptor.JSON_PROPERTY_VERSION,
  ServiceDescriptor.JSON_PROPERTY_LINKS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen")
public class ServiceDescriptor   {
  public static final String JSON_PROPERTY_NAME = "name";
  @JsonProperty(JSON_PROPERTY_NAME)
  private String name;

  public static final String JSON_PROPERTY_URI = "uri";
  @JsonProperty(JSON_PROPERTY_URI)
  private String uri;

  public static final String JSON_PROPERTY_INSTRUMENT = "instrument";
  @JsonProperty(JSON_PROPERTY_INSTRUMENT)
  private List<Instrument> instrument = new ArrayList<>();

  public static final String JSON_PROPERTY_PROGRAM = "program";
  @JsonProperty(JSON_PROPERTY_PROGRAM)
  private Program program;

  public static final String JSON_PROPERTY_CREATION_DATE = "creation_date";
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  private OffsetDateTime creationDate;

  public static final String JSON_PROPERTY_VERSION = "version";
  @JsonProperty(JSON_PROPERTY_VERSION)
  private String version;

  public static final String JSON_PROPERTY_LINKS = "links";
  @JsonProperty(JSON_PROPERTY_LINKS)
  private List<String> links = null;

  public ServiceDescriptor name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty("name")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ServiceDescriptor uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * Unique descriptorof the servive: svom://a/bc#x/y/z
   * @return uri
   **/
  @JsonProperty("uri")
  @ApiModelProperty(required = true, value = "Unique descriptorof the servive: svom://a/bc#x/y/z")
  @NotNull  @Pattern(regexp="^svom:/(/[a-z0-9-._]+)+((#[a-z0-9-._]+)(/[a-z0-9-._]+)*)$")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public ServiceDescriptor instrument(List<Instrument> instrument) {
    this.instrument = instrument;
    return this;
  }

  public ServiceDescriptor addInstrumentItem(Instrument instrumentItem) {
    this.instrument.add(instrumentItem);
    return this;
  }

  /**
   * Instruments whose data are processed by the service
   * @return instrument
   **/
  @JsonProperty("instrument")
  @ApiModelProperty(required = true, value = "Instruments whose data are processed by the service")
  @NotNull @Valid 
  public List<Instrument> getInstrument() {
    return instrument;
  }

  public void setInstrument(List<Instrument> instrument) {
    this.instrument = instrument;
  }

  public ServiceDescriptor program(Program program) {
    this.program = program;
    return this;
  }

  /**
   * Get program
   * @return program
   **/
  @JsonProperty("program")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Program getProgram() {
    return program;
  }

  public void setProgram(Program program) {
    this.program = program;
  }

  public ServiceDescriptor creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Generic type for the Dates. Using Date as classname make the generator including java import in the Py code
   * @return creationDate
   **/
  @JsonProperty("creation_date")
  @ApiModelProperty(required = true, value = "Generic type for the Dates. Using Date as classname make the generator including java import in the Py code")
  @NotNull 
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public ServiceDescriptor version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   **/
  @JsonProperty("version")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ServiceDescriptor links(List<String> links) {
    this.links = links;
    return this;
  }

  public ServiceDescriptor addLinksItem(String linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

  /**
   * Free text giving additional information such the Swagger file
   * @return links
   **/
  @JsonProperty("links")
  @ApiModelProperty(value = "Free text giving additional information such the Swagger file")
  
  public List<String> getLinks() {
    return links;
  }

  public void setLinks(List<String> links) {
    this.links = links;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceDescriptor serviceDescriptor = (ServiceDescriptor) o;
    return Objects.equals(this.name, serviceDescriptor.name) &&
        Objects.equals(this.uri, serviceDescriptor.uri) &&
        Objects.equals(this.instrument, serviceDescriptor.instrument) &&
        Objects.equals(this.program, serviceDescriptor.program) &&
        Objects.equals(this.creationDate, serviceDescriptor.creationDate) &&
        Objects.equals(this.version, serviceDescriptor.version) &&
        Objects.equals(this.links, serviceDescriptor.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, uri, instrument, program, creationDate, version, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceDescriptor {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    instrument: ").append(toIndentedString(instrument)).append("\n");
    sb.append("    program: ").append(toIndentedString(program)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

