variables:
    IMAGE: crest21-service
    VERSION: '6.2'
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"

# Make the gradle wrapper executable. This essentially downloads a copy of
# Gradle to build the project with.
# https://docs.gradle.org/current/userguide/gradle_wrapper.html
# It is expected that any modern gradle project has a wrapper
before_script:
  - chmod +x gradlew

include:
  - project : 'ci-tools/container-image-ci-templates'
    file : 'kaniko-image.gitlab-ci.yml'
    ref: master
  - project : 'dcorre/ci-templates'
    file : 'helm/helm.yml'
    ref: main

stages:
 - package_application
 #- build
 - sonar_application
 - push

package_cern_application:
  stage: package_application
  environment: cern
  image: registry.cern.ch/docker.io/eclipse-temurin:23-alpine
  services:
    - registry.cern.ch/docker.io/redis:latest
  variables:
    REDIS_HOST: redis
    REDIS_PORT: 6379
  script:
   - ./gradlew clean build
  allow_failure: false
  artifacts:
   paths:
   - ./build/libs/crest.jar

# Can be used to test packaging helm chart, before merging to master for instance
#build_helm:
#  extends: .deploy_helm
#  stage: build
#  variables:
#    REGISTRY_CHART_PATH: registry.cern.ch/crest/charts


build_container_job:
  rules:
    - if: $DO_DOCKER_IMAGE == "yes" && $CI_PIPELINE_SOURCE != 'merge_request_event' && $SITE == "cern"
  environment: cern
  stage: push
  extends: .build_kaniko
  variables:
    REGISTRY_IMAGE_PATH : "registry.cern.ch/crest/$IMAGE:$VERSION"
    CONTEXT_DIR: ""
    PUSH_IMAGE: "true"
    DOCKER_FILE_NAME: "Dockerfile"


push_helm:
  extends: .deploy_helm
  stage: push
  variables:
    REGISTRY_CHART_PATH: registry.cern.ch/crest/charts
    PUSH_CHART: "true"

