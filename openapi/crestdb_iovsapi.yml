openapi: 3.0.0

info:
  $ref: 'schemas/common.yml#/info'

servers:
  $ref: 'schemas/common.yml#/servers'

security:
  $ref: 'schemas/common.yml#/security'

tags:
  - name: iovs


paths:
  /iovs:
    get:
      tags:
        - iovs
      summary: Finds a IovDtos lists.
      description: 'This method allows to perform search by tagname and sorting.Arguments: tagname={a tag name}, page={ipage}, size={isize},      sort=<pattern>, where pattern is <field>:[DESC|ASC]'
      operationId: findAllIovs
      parameters:
        - name: by
          in: query
          description: 'you need a mandatory tagname:xxxx. Additional field can be since or insertionTime rules.'
          required: true
          schema:
            type: string
            default: none
        - name: page
          in: query
          description: 'page: the page number {0}'
          required: false
          schema:
            type: integer
            default: 0
            format: int32
        - name: size
          in: query
          description: 'size: the page size {10000}'
          required: false
          schema:
            type: integer
            default: 10000
            format: int32
        - name: sort
          in: query
          description: 'sort: the sort pattern {id.since:ASC}'
          required: false
          schema:
            type: string
            default: 'id.since:ASC'
        - in: header
          name: dateformat
          description: 'The format of the input time fields: {yyyyMMdd''T''HHmmssX | ms} DEFAULT: ms (so it is a long). Used for insertionTime comparaison.'
          schema:
            default: ms
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IovSetDto"
    post:
      tags:
        - iovs
      summary: Create a Iov in the database.
      description: 'This method allows to insert a Iov.Arguments: IovDto should be provided in the body as a JSON file.'
      operationId: createIov
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IovDto'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IovDto"
  /iovs/storebatch:
    post:
      tags:
        - iovs
      summary: 'Create many IOVs in the database, associated to a tag name.'
      description: 'This method allows to insert multiple IOVs. Arguments: tagname,end time.'
      operationId: storeBatchIovMultiForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IovSetDto'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IovSetDto"
  /iovs/getSize:
    get:
      tags:
        - iovs
      summary: Get the number o iovs for the given tag.
      description: 'This method allows to select the count of iovs in a tag. Also possible to get the size of snapshot, if the time added.Arguments: tagname={a tag name}, snapshotTime={snapshot time in milliseconds (Long) from epoch}'
      operationId: getSize
      parameters:
        - name: tagname
          in: query
          description: 'tagname: the tag name {none}'
          required: true
          schema:
            type: string
            default: none
        - name: snapshot
          in: query
          description: 'snapshot: the snapshot time {0}'
          required: false
          schema:
            type: integer
            default: 0
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrestBaseResponse"
  /iovs/getSizeByTag:
    get:
      tags:
        - iovs
      summary: Get the number o iovs for tags matching pattern.
      description: 'This method allows to select the count of iovs in a tag. Also possible to get the size of snapshot, if the time is added. Arguments: tagname={a tag name}'
      operationId: getSizeByTag
      parameters:
        - name: tagname
          in: query
          description: 'tagname: the tag name {none}'
          required: true
          schema:
            type: string
            default: none
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagSummarySetDto"
  /iovs/selectGroups:
    get:
      tags:
        - iovs
      summary: Select groups for a given tagname.
      description: 'This method allows to select a list of groups.Arguments: tagname={a tag name}, snapshot={snapshot time as long}'
      operationId: selectGroups
      parameters:
        - name: tagname
          in: query
          description: 'tagname: the tag name {none}'
          required: true
          schema:
            type: string
            default: none
        - name: snapshot
          in: query
          description: 'snapshot: the snapshot time {0}'
          required: false
          schema:
            type: integer
            default: 0
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IovSetDto"
  /iovs/selectIovs:
    get:
      tags:
        - iovs
      summary: Select iovs for a given tagname and in a given range.
      description: 'This method allows to select a list of iovs in a tag, using a given range in time and (optionally) for a given snapshot time.Arguments: tagname={a tag name}, since={since time as string}, until={until time as string}, snapshot={snapshot time as long}'
      operationId: selectIovs
      parameters:
        - name: X-Crest-Query
          in: header
          description: 'The query type. The header parameter X-Crest-Query can be : groups (default) or ranges (include previous since).'
          schema:
            default: groups
            type: string
        - name: tagname
          in: query
          description: 'tagname: the tag name {none}'
          required: false
          schema:
            type: string
            default: none
        - name: since
          in: query
          description: 'since: the since time as a string {0}'
          required: false
          schema:
            type: string
            default: '0'
        - name: until
          in: query
          description: 'until: the until time as a string {INF}'
          required: false
          schema:
            type: string
            default: INF
        - name: snapshot
          in: query
          description: 'snapshot: the snapshot time {0}'
          required: false
          schema:
            type: integer
            default: 0
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IovSetDto"

  /iovs/selectIovPayloads:
    get:
      tags:
        - iovs
      summary: Select iovs and payload meta info for a given tagname and in a given range.
      description: 'This method allows to select a list of iovs+payload meta in a tag, using a given range in time and (optionally) for a given snapshot time.Arguments: tagname={a tag name}, since={since time as string}, until={until time as string}, snapshot={snapshot time as long}'
      operationId: selectIovPayloads
      parameters:
        - name: X-Crest-Query
          in: header
          description: 'The query type. The header parameter X-Crest-Query can be : groups (default) or ranges (include previous since).'
          schema:
            default: groups
            type: string
        - name: tagname
          in: query
          description: 'tagname: the tag name {none}'
          required: false
          schema:
            type: string
            default: none
        - name: since
          in: query
          description: 'since: the since time as a string {0}'
          required: false
          schema:
            type: string
            default: '0'
        - name: until
          in: query
          description: 'until: the until time as a string {INF}'
          required: false
          schema:
            type: string
            default: INF
        - name: snapshot
          in: query
          description: 'snapshot: the snapshot time {0}'
          required: false
          schema:
            type: integer
            default: 0
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IovPayloadSetDto"
  /iovs/lastIov:
    get:
      tags:
        - iovs
      summary: Select last iov for a given tagname and before a given since.
      description: 'This method allows to select the last iov in a tag, before a given time and (optionally) for a given snapshot time.Arguments: tagname={a tag name}, since={since time as string}, snapshot={snapshot time as long}'
      operationId: lastIov
      parameters:
        - name: tagname
          in: query
          description: 'tagname: the tag name {none}'
          required: false
          schema:
            type: string
            default: none
        - name: since
          in: query
          description: 'since: the since time '
          required: false
          schema:
            type: string
            default: now
        - name: snapshot
          in: query
          description: 'snapshot: the snapshot time {0}'
          required: false
          schema:
            type: integer
            default: 0
            format: int64
        - in: header
          name: dateformat
          description: 'The format of the input time fields: {yyyyMMdd''T''HHmmssX | ms} DEFAULT: ms (so it is a long). Used for insertionTime comparaison.'
          schema:
            default: ms
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IovSetDto"
  /iovs/selectSnapshot:
    get:
      tags:
        - iovs
      summary: Select snapshot for a given tagname and insertion time.
      description: 'This method allows to select a list of all iovs in a tag, using (optionally) a given snapshot time.Arguments: tagname={a tag name}, snapshot={snapshot time as long}'
      operationId: selectSnapshot
      parameters:
        - name: tagname
          in: query
          description: 'tagname: the tag name {none}'
          required: true
          schema:
            type: string
            default: none
        - name: snapshot
          in: query
          description: 'snapshot: the snapshot time {0}'
          required: true
          schema:
            type: integer
            default: 0
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IovSetDto"

components:
  securitySchemes:
    $ref: 'schemas/common.yml#/components/securitySchemes'
  requestBodies:
    $ref: 'schemas/common.yml#/components/requestBodies'

  schemas:
    # commons
    HTTPResponse:
      $ref: 'schemas/common.yml#/components/schemas/HTTPResponse'
    CrestBaseResponse:
      $ref: 'schemas/common.yml#/components/schemas/CrestBaseResponse'
    RespPage:
      $ref: 'schemas/common.yml#/components/schemas/RespPage'
    GenericMap:
      $ref: 'schemas/common.yml#/components/schemas/GenericMap'

    IovSetDto:
      $ref: 'schemas/iovs.yml#/components/schemas/IovSetDto'
    IovDto:
      $ref: 'schemas/iovs.yml#/components/schemas/IovDto'
    IovPayloadSetDto:
      $ref: 'schemas/iovs.yml#/components/schemas/IovPayloadSetDto'
    IovPayloadDto:
      $ref: 'schemas/iovs.yml#/components/schemas/IovPayloadDto'
    TagSummarySetDto:
      $ref: 'schemas/tags.yml#/components/schemas/TagSummarySetDto'
    TagSummaryDto:
      $ref: 'schemas/tags.yml#/components/schemas/TagSummaryDto'
